<!-- Dashboard Header -->
<section class="bg-primary text-white py-5">
    <div class="container">
        <h1 class="display-4 fw-bold">UniScan Admin Dashboard</h1>
        <p class="lead">Welcome, <%= admin.username %></p>
    </div>
</section>

<!-- Dashboard Content -->
<section class="py-5">
    <div class="container">
        <div class="row">
            <!-- System Status Card -->
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">
                            <i class="bi bi-shield-check text-success me-2"></i>
                            System Status
                        </h5>
                        <p class="card-text">All systems operational</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="badge bg-success">Online</span>
                            <small class="text-muted">Last updated: Just now</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Access Logs Card -->
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">
                            <i class="bi bi-list-check text-primary me-2"></i>
                            Recent Access Logs
                        </h5>
                        <div class="list-group list-group-flush">
                            <div class="list-group-item">
                                <div class="d-flex justify-content-between">
                                    <span>User ID: 12345</span>
                                    <small class="text-muted">2 mins ago</small>
                                </div>
                                <small class="text-success">Access Granted</small>
                            </div>
                            <div class="list-group-item">
                                <div class="d-flex justify-content-between">
                                    <span>User ID: 67890</span>
                                    <small class="text-muted">5 mins ago</small>
                                </div>
                                <small class="text-success">Access Granted</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Actions Card -->
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">
                            <i class="bi bi-lightning-charge text-warning me-2"></i>
                            Quick Actions
                        </h5>
                        <div class="d-grid gap-2">
                            <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
                                <i class="bi bi-person-plus me-2"></i>
                                Add New User
                            </button>
                            <a href="/admin/access-logs" class="btn btn-outline-primary">
                                <i class="bi bi-list-check me-2"></i>
                                View Access Logs
                            </a>
                            <a href="/admin/analytics" class="btn btn-outline-primary">
                                <i class="bi bi-graph-up me-2"></i>
                                Campus Analytics
                            </a>
                            <button class="btn btn-outline-primary">
                                <i class="bi bi-gear me-2"></i>
                                System Settings
                            </button>
                            <button class="btn btn-outline-primary" id="toggleSimulation">
                                <i class="bi bi-play-circle me-2"></i>
                                <span id="simulationStatus">Start Simulation</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Users Table Section -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="bi bi-people text-primary me-2"></i>
                            Registered Users
                        </h5>
                        <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addUserModal">
                            <i class="bi bi-person-plus me-2"></i>
                            Add New User
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover" id="usersTable">
                                <thead>
                                    <tr>
                                        <th>RFID Card ID</th>
                                        <th>Name</th>
                                        <th>Access Level</th>
                                        <th>Status</th>
                                        <th>Balance</th>
                                        <th>Last Access</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Users will be loaded here via JavaScript -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Detailed Statistics -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">System Statistics</h5>
                        <div class="row">
                            <div class="col-md-3 text-center">
                                <h3>150</h3>
                                <p class="text-muted">Total Users</p>
                            </div>
                            <div class="col-md-3 text-center">
                                <h3>98%</h3>
                                <p class="text-muted">System Uptime</p>
                            </div>
                            <div class="col-md-3 text-center">
                                <h3>24</h3>
                                <p class="text-muted">Active Sessions</p>
                            </div>
                            <div class="col-md-3 text-center">
                                <h3>0</h3>
                                <p class="text-muted">Security Alerts</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addUserModalLabel">Add New User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addUserForm">
                    <div class="mb-3">
                        <label for="rfidCardId" class="form-label">RFID Card ID</label>
                        <input type="text" class="form-control" id="rfidCardId" name="rfidCardId" required
                               pattern="[A-F0-9]{8}" title="Please enter a valid 8-character RFID card ID (hexadecimal)">
                        <div class="form-text">Enter the 8-character RFID card ID (hexadecimal format)</div>
                    </div>
                    <div class="mb-3">
                        <label for="userName" class="form-label">User Name</label>
                        <input type="text" class="form-control" id="userName" name="name" required
                               minlength="2" maxlength="50">
                    </div>
                    <div class="mb-3">
                        <label for="accessLevel" class="form-label">Access Level</label>
                        <select class="form-select" id="accessLevel" name="accessLevel" required>
                            <option value="1">Level 1 - Basic Access</option>
                            <option value="2">Level 2 - Standard Access</option>
                            <option value="3">Level 3 - Admin Access</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveUserBtn">Save User</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="editUserId" name="id">
                    <div class="mb-3">
                        <label for="editRfidCardId" class="form-label">RFID Card ID</label>
                        <input type="text" class="form-control" id="editRfidCardId" name="rfidCardId" required
                               pattern="[A-F0-9]{8}" title="Please enter a valid 8-character RFID card ID (hexadecimal)">
                        <div class="form-text">Enter the 8-character RFID card ID (hexadecimal format)</div>
                    </div>
                    <div class="mb-3">
                        <label for="editUserName" class="form-label">User Name</label>
                        <input type="text" class="form-control" id="editUserName" name="name" required
                               minlength="2" maxlength="50">
                    </div>
                    <div class="mb-3">
                        <label for="editAccessLevel" class="form-label">Access Level</label>
                        <select class="form-select" id="editAccessLevel" name="accessLevel" required>
                            <option value="1">Level 1 - Basic Access</option>
                            <option value="2">Level 2 - Standard Access</option>
                            <option value="3">Level 3 - Admin Access</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editStatus" class="form-label">Status</label>
                        <select class="form-select" id="editStatus" name="status" required>
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="updateUserBtn">Update User</button>
            </div>
        </div>
    </div>
</div>

<!-- Top Up Modal -->
<div class="modal fade" id="topUpModal" tabindex="-1" aria-labelledby="topUpModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="topUpModalLabel">Top Up Balance</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="topUpForm">
                    <input type="hidden" id="topUpUserId" name="userId">
                    <div class="mb-3">
                        <label for="amount" class="form-label">Amount (KSh)</label>
                        <input type="number" class="form-control" id="amount" name="amount" required
                               min="50" step="50">
                        <div class="form-text">Minimum top-up amount is KSh 50</div>
                    </div>
                    <div class="mb-3">
                        <label for="phoneNumber" class="form-label">M-Pesa Phone Number</label>
                        <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber" required
                               pattern="^07[0-9]{8}$" title="Please enter a valid M-Pesa phone number (format: 07XXXXXXXX)">
                        <div class="form-text">Enter your M-Pesa phone number (format: 07XXXXXXXX)</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="initiateTopUpBtn">Initiate Payment</button>
            </div>
        </div>
    </div>
</div>

<!-- Success Toast -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="bi bi-check-circle-fill text-success me-2"></i>
            <strong class="me-auto">Success</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            User added successfully!
        </div>
    </div>
</div>

<!-- Error Toast -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="errorToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="bi bi-exclamation-triangle-fill text-danger me-2"></i>
            <strong class="me-auto">Error</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="errorToastMessage">
            An error occurred while adding the user.
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const addUserForm = document.getElementById('addUserForm');
    const saveUserBtn = document.getElementById('saveUserBtn');
    const editUserForm = document.getElementById('editUserForm');
    const updateUserBtn = document.getElementById('updateUserBtn');
    const successToast = new bootstrap.Toast(document.getElementById('successToast'));
    const errorToast = new bootstrap.Toast(document.getElementById('errorToast'));
    const errorToastMessage = document.getElementById('errorToastMessage');
    const addUserModal = new bootstrap.Modal(document.getElementById('addUserModal'));
    const editUserModal = new bootstrap.Modal(document.getElementById('editUserModal'));
    const usersTable = document.getElementById('usersTable').getElementsByTagName('tbody')[0];
    const toggleSimulationBtn = document.getElementById('toggleSimulation');
    const simulationStatus = document.getElementById('simulationStatus');

    // Function to load users
    async function loadUsers() {
        try {
            const response = await fetch('/api/admin/users', {
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'include' // Include session cookies
            });
            
            if (response.ok) {
                const users = await response.json();
                const usersTable = document.getElementById('usersTable').getElementsByTagName('tbody')[0];
                usersTable.innerHTML = ''; // Clear existing rows
                
                users.forEach(user => {
                    const row = usersTable.insertRow();
                    row.innerHTML = `
                        <td>${user.rfidCardId || ''}</td>
                        <td>${user.name || ''}</td>
                        <td>
                            <span class="badge ${getAccessLevelBadgeClass(user.accessLevel)}">
                                Level ${user.accessLevel || 1}
                            </span>
                        </td>
                        <td>
                            <span class="badge ${user.status === 'active' ? 'bg-success' : 'bg-danger'}">
                                ${user.status || 'inactive'}
                            </span>
                        </td>
                        <td>
                            <span class="badge bg-info">
                                KSh ${(user.balance || 0).toFixed(2)}
                            </span>
                            <button class="btn btn-sm btn-outline-success ms-2" onclick="showTopUpModal('${user.id}')">
                                <i class="bi bi-plus-circle"></i>
                            </button>
                        </td>
                        <td>${user.lastAccess ? new Date(user.lastAccess).toLocaleString() : 'Never'}</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary me-1" onclick="editUser('${user.id}')">
                                <i class="bi bi-pencil"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteUser('${user.id}')">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    `;
                });
            } else {
                if (response.status === 401) {
                    window.location.href = '/admin/login'; // Redirect to login if unauthorized
                } else {
                    throw new Error('Failed to load users');
                }
            }
        } catch (error) {
            console.error('Error loading users:', error);
            const errorToast = new bootstrap.Toast(document.getElementById('errorToast'));
            document.getElementById('errorToastMessage').textContent = 'Failed to load users';
            errorToast.show();
        }
    }

    // Function to get badge class based on access level
    function getAccessLevelBadgeClass(level) {
        switch(parseInt(level)) {
            case 1: return 'bg-info';
            case 2: return 'bg-primary';
            case 3: return 'bg-warning';
            default: return 'bg-secondary';
        }
    }

    // Load users when page loads
    loadUsers();

    // Reload users after adding a new user
    saveUserBtn.addEventListener('click', async function() {
        const formData = new FormData(addUserForm);
        const data = {
            rfidCardId: formData.get('rfidCardId'),
            name: formData.get('name'),
            accessLevel: parseInt(formData.get('accessLevel'))
        };

        try {
            const response = await fetch('/api/admin/add_user', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                addUserModal.hide();
                successToast.show();
                addUserForm.reset();
                loadUsers(); // Reload the users table
            } else {
                const errorData = await response.json();
                errorToastMessage.textContent = errorData.error || 'Failed to add user';
                errorToast.show();
            }
        } catch (error) {
            errorToastMessage.textContent = 'Network error occurred';
            errorToast.show();
        }
    });

    // Handle user update
    updateUserBtn.addEventListener('click', async function() {
        const formData = new FormData(editUserForm);
        const data = {
            id: formData.get('id'),
            rfidCardId: formData.get('rfidCardId'),
            name: formData.get('name'),
            accessLevel: parseInt(formData.get('accessLevel')),
            status: formData.get('status')
        };

        try {
            const response = await fetch(`/api/admin/users/${data.id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                editUserModal.hide();
                successToast.show();
                loadUsers(); // Reload the users table
            } else {
                const errorData = await response.json();
                errorToastMessage.textContent = errorData.error || 'Failed to update user';
                errorToast.show();
            }
        } catch (error) {
            errorToastMessage.textContent = 'Network error occurred';
            errorToast.show();
        }
    });

    // Handle top-up initiation
    document.getElementById('initiateTopUpBtn').addEventListener('click', async function() {
        const formData = new FormData(document.getElementById('topUpForm'));
        const data = {
            userId: formData.get('userId'),
            amount: parseFloat(formData.get('amount')),
            phoneNumber: formData.get('phoneNumber')
        };

        try {
            const response = await fetch('/api/admin/top-up', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                const result = await response.json();
                if (result.success) {
                    document.getElementById('topUpModal').querySelector('.btn-close').click();
                    successToast.show();
                    loadUsers(); // Reload the users table
                } else {
                    errorToastMessage.textContent = result.message || 'Failed to initiate payment';
                    errorToast.show();
                }
            } else {
                const errorData = await response.json();
                errorToastMessage.textContent = errorData.error || 'Failed to initiate payment';
                errorToast.show();
            }
        } catch (error) {
            errorToastMessage.textContent = 'Network error occurred';
            errorToast.show();
        }
    });

    // Function to check simulation status
    async function checkSimulationStatus() {
        try {
            const response = await fetch('/api/admin/simulation/status', {
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'include'
            });
            
            if (response.ok) {
                const data = await response.json();
                simulationStatus.textContent = data.isActive ? 'Stop Simulation' : 'Start Simulation';
                toggleSimulationBtn.classList.toggle('btn-danger', data.isActive);
                toggleSimulationBtn.classList.toggle('btn-outline-primary', !data.isActive);
            }
        } catch (error) {
            console.error('Error checking simulation status:', error);
        }
    }
    
    // Function to toggle simulation
    async function toggleSimulation() {
        try {
            const response = await fetch('/api/admin/simulation/toggle', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'include'
            });
            
            if (response.ok) {
                await checkSimulationStatus();
            }
        } catch (error) {
            console.error('Error toggling simulation:', error);
        }
    }
    
    // Event listeners
    toggleSimulationBtn.addEventListener('click', toggleSimulation);
    
    // Check initial status
    checkSimulationStatus();
});

// Functions for user actions
async function editUser(userId) {
    try {
        const response = await fetch(`/api/admin/users/${userId}`);
        const user = await response.json();
        editUserForm.elements.id.value = user.id;
        editUserForm.elements.editRfidCardId.value = user.rfidCardId;
        editUserForm.elements.editUserName.value = user.name;
        editUserForm.elements.editAccessLevel.value = user.accessLevel;
        editUserForm.elements.editStatus.value = user.status;
        editUserModal.show();
    } catch (error) {
        console.error('Error loading user:', error);
        errorToastMessage.textContent = 'Failed to load user';
        errorToast.show();
    }
}
</script>
</rewritten_file>